{"ast":null,"code":"var _jsxFileName = \"/home/shreyas/project_login/project_login_frontend/src/components/AddStudent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './AddStudents.css'; // Assuming you have some styles in this file\n\n// const AddStudent = ({ token }) => {\n//   const [assignedClass, setAssignedClass] = useState(null);\n//   const [formData, setFormData] = useState({\n//     username: '',\n//     email: '',\n//     password: '',\n//     date_of_birth: '',\n//     gender: 'M',   // default gender\n//     address: '',\n//     parent_contact: ''\n//   });\n\n//   useEffect(() => {\n//     if (!token) return;\n\n//     axios.get('http://localhost:8000/api/assignedclass/', {\n//       headers: { Authorization: `Bearer ${token}` }\n//     })\n//       .then(res => setAssignedClass(res.data))\n//       .catch(err => {\n//         console.error('Failed to fetch assigned class:', err);\n//         alert('Error fetching assigned class. Please login again.');\n//       });\n//   }, [token]);\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData(prev => ({ ...prev, [name]: value }));\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (!assignedClass) return alert(\"Loading class info, please wait.\");\n\n//     try {\n//       await axios.post('http://localhost:8000/api/AddStudent/', {\n//         ...formData,\n//         student_class: assignedClass.id\n//       }, {\n//         headers: { Authorization: `Bearer ${token}` }\n//       });\n\n//       alert('Student profile created successfully!');\n//       setFormData({\n//         username: '',\n//         email: '',\n//         password: '',\n//         date_of_birth: '',\n//         gender: 'M',\n//         address: '',\n//         parent_contact: ''\n//       });\n//     } catch (error) {\n//       alert('Failed to create student: ' + JSON.stringify(error.response?.data || error.message));\n//     }\n//   };\n\n//   if (!assignedClass) return <p>Loading assigned class...</p>;\n\n//   return (\n//     <form onSubmit={handleSubmit}>\n//       <div>\n//         <label>Username:</label>\n//         <input\n//           name=\"username\"\n//           value={formData.username}\n//           onChange={handleChange}\n//           required\n//           minLength={3}\n//         />\n//       </div>\n//       <div>\n//         <label>Email:</label>\n//         <input\n//           name=\"email\"\n//           type=\"email\"\n//           value={formData.email}\n//           onChange={handleChange}\n//           required\n//         />\n//       </div>\n//       <div>\n//         <label>Password:</label>\n//         <input\n//           name=\"password\"\n//           type=\"password\"\n//           value={formData.password}\n//           onChange={handleChange}\n//           required\n//           minLength={6}\n//         />\n//       </div>\n//       <div>\n//         <label>Date of Birth:</label>\n//         <input\n//           name=\"date_of_birth\"\n//           type=\"date\"\n//           value={formData.date_of_birth}\n//           onChange={handleChange}\n//           required\n//         />\n//       </div>\n//       <div>\n//         <label>Gender:</label>\n//         <select\n//           name=\"gender\"\n//           value={formData.gender}\n//           onChange={handleChange}\n//         >\n//           <option value=\"M\">Male</option>\n//           <option value=\"F\">Female</option>\n//           <option value=\"O\">Other</option>\n//         </select>\n//       </div>\n//       <div>\n//         <label>Address:</label>\n//         <textarea\n//           name=\"address\"\n//           value={formData.address}\n//           onChange={handleChange}\n//           required\n//         />\n//       </div>\n//       <div>\n//         <label>Parent Contact:</label>\n//         <input\n//           name=\"parent_contact\"\n//           value={formData.parent_contact}\n//           onChange={handleChange}\n//           required\n//         />\n//       </div>\n//       <div>\n//         <label>Class:</label>\n//         <input value={assignedClass.name} disabled />\n//       </div>\n//       <button type=\"submit\">Add Student</button>\n//     </form>\n//   );\n// };\n\n// export default AddStudent;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddStudent = ({\n  token\n}) => {\n  _s();\n  const [classes, setClasses] = useState([]);\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    password: '',\n    date_of_birth: '',\n    gender: 'M',\n    // default gender\n    address: '',\n    parent_contact: '',\n    student_class: '' // selected class id\n  });\n  useEffect(() => {\n    if (!token) return;\n\n    // Fetch all classes from your API endpoint\n    axios.get('http://localhost:8000/api/allclassrooms/ ', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => setClasses(res.data)).catch(err => {\n      console.error('Failed to fetch classes:', err);\n      alert('Error fetching classes. Please login again.');\n    });\n  }, [token]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!formData.student_class) {\n      return alert(\"Please select a class\");\n    }\n    try {\n      await axios.post('http://localhost:8000/api/AddStudent/', formData, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      alert('Student profile created successfully!');\n      setFormData({\n        username: '',\n        email: '',\n        password: '',\n        date_of_birth: '',\n        gender: 'M',\n        address: '',\n        parent_contact: '',\n        student_class: ''\n      });\n    } catch (error) {\n      var _error$response;\n      alert('Failed to create student: ' + JSON.stringify(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message));\n    }\n  };\n  if (!classes.length) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading classes...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 31\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"username\",\n      value: formData.username,\n      onChange: handleChange,\n      placeholder: \"Username\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Select Class:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"student_class\",\n        value: formData.student_class,\n        onChange: handleChange,\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"-- Select Class --\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), classes.map(cls => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: cls.id,\n          children: cls.name\n        }, cls.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add Student\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 212,\n    columnNumber: 5\n  }, this);\n};\n_s(AddStudent, \"8g9pWYuyIu6696uqIVfZMXaO5Xw=\");\n_c = AddStudent;\nexport default AddStudent;\nvar _c;\n$RefreshReg$(_c, \"AddStudent\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","AddStudent","token","_s","classes","setClasses","formData","setFormData","username","email","password","date_of_birth","gender","address","parent_contact","student_class","get","headers","Authorization","then","res","data","catch","err","console","error","alert","handleChange","e","name","value","target","prev","handleSubmit","preventDefault","post","_error$response","JSON","stringify","response","message","length","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","placeholder","required","map","cls","id","type","_c","$RefreshReg$"],"sources":["/home/shreyas/project_login/project_login_frontend/src/components/AddStudent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './AddStudents.css'; // Assuming you have some styles in this file\n\n\n// const AddStudent = ({ token }) => {\n//   const [assignedClass, setAssignedClass] = useState(null);\n//   const [formData, setFormData] = useState({\n//     username: '',\n//     email: '',\n//     password: '',\n//     date_of_birth: '',\n//     gender: 'M',   // default gender\n//     address: '',\n//     parent_contact: ''\n//   });\n\n//   useEffect(() => {\n//     if (!token) return;\n\n//     axios.get('http://localhost:8000/api/assignedclass/', {\n//       headers: { Authorization: `Bearer ${token}` }\n//     })\n//       .then(res => setAssignedClass(res.data))\n//       .catch(err => {\n//         console.error('Failed to fetch assigned class:', err);\n//         alert('Error fetching assigned class. Please login again.');\n//       });\n//   }, [token]);\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData(prev => ({ ...prev, [name]: value }));\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (!assignedClass) return alert(\"Loading class info, please wait.\");\n\n//     try {\n//       await axios.post('http://localhost:8000/api/AddStudent/', {\n//         ...formData,\n//         student_class: assignedClass.id\n//       }, {\n//         headers: { Authorization: `Bearer ${token}` }\n//       });\n\n//       alert('Student profile created successfully!');\n//       setFormData({\n//         username: '',\n//         email: '',\n//         password: '',\n//         date_of_birth: '',\n//         gender: 'M',\n//         address: '',\n//         parent_contact: ''\n//       });\n//     } catch (error) {\n//       alert('Failed to create student: ' + JSON.stringify(error.response?.data || error.message));\n//     }\n//   };\n\n//   if (!assignedClass) return <p>Loading assigned class...</p>;\n\n//   return (\n//     <form onSubmit={handleSubmit}>\n//       <div>\n//         <label>Username:</label>\n//         <input\n//           name=\"username\"\n//           value={formData.username}\n//           onChange={handleChange}\n//           required\n//           minLength={3}\n//         />\n//       </div>\n//       <div>\n//         <label>Email:</label>\n//         <input\n//           name=\"email\"\n//           type=\"email\"\n//           value={formData.email}\n//           onChange={handleChange}\n//           required\n//         />\n//       </div>\n//       <div>\n//         <label>Password:</label>\n//         <input\n//           name=\"password\"\n//           type=\"password\"\n//           value={formData.password}\n//           onChange={handleChange}\n//           required\n//           minLength={6}\n//         />\n//       </div>\n//       <div>\n//         <label>Date of Birth:</label>\n//         <input\n//           name=\"date_of_birth\"\n//           type=\"date\"\n//           value={formData.date_of_birth}\n//           onChange={handleChange}\n//           required\n//         />\n//       </div>\n//       <div>\n//         <label>Gender:</label>\n//         <select\n//           name=\"gender\"\n//           value={formData.gender}\n//           onChange={handleChange}\n//         >\n//           <option value=\"M\">Male</option>\n//           <option value=\"F\">Female</option>\n//           <option value=\"O\">Other</option>\n//         </select>\n//       </div>\n//       <div>\n//         <label>Address:</label>\n//         <textarea\n//           name=\"address\"\n//           value={formData.address}\n//           onChange={handleChange}\n//           required\n//         />\n//       </div>\n//       <div>\n//         <label>Parent Contact:</label>\n//         <input\n//           name=\"parent_contact\"\n//           value={formData.parent_contact}\n//           onChange={handleChange}\n//           required\n//         />\n//       </div>\n//       <div>\n//         <label>Class:</label>\n//         <input value={assignedClass.name} disabled />\n//       </div>\n//       <button type=\"submit\">Add Student</button>\n//     </form>\n//   );\n// };\n\n// export default AddStudent;\n\nconst AddStudent = ({ token }) => {\n  const [classes, setClasses] = useState([]);\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    password: '',\n    date_of_birth: '',\n    gender: 'M',   // default gender\n    address: '',\n    parent_contact: '',\n    student_class: '', // selected class id\n  });\n\n  useEffect(() => {\n    if (!token) return;\n\n    // Fetch all classes from your API endpoint\n    axios.get('http://localhost:8000/api/allclassrooms/ ', {\n      headers: { Authorization: `Bearer ${token}` }\n    })\n      .then(res => setClasses(res.data))\n      .catch(err => {\n        console.error('Failed to fetch classes:', err);\n        alert('Error fetching classes. Please login again.');\n      });\n  }, [token]);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({ ...prev, [name]: value }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!formData.student_class) {\n      return alert(\"Please select a class\");\n    }\n\n    try {\n      await axios.post('http://localhost:8000/api/AddStudent/', formData, {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n\n      alert('Student profile created successfully!');\n      setFormData({\n        username: '',\n        email: '',\n        password: '',\n        date_of_birth: '',\n        gender: 'M',\n        address: '',\n        parent_contact: '',\n        student_class: ''\n      });\n    } catch (error) {\n      alert('Failed to create student: ' + JSON.stringify(error.response?.data || error.message));\n    }\n  };\n\n  if (!classes.length) return <p>Loading classes...</p>;\n\n  return (\n    <form onSubmit={handleSubmit}>\n      {/* other input fields */}\n      <input\n        name=\"username\"\n        value={formData.username}\n        onChange={handleChange}\n        placeholder=\"Username\"\n        required\n      />\n      {/* ... other inputs for email, password, etc. */}\n\n      <label>\n        Select Class:\n        <select\n          name=\"student_class\"\n          value={formData.student_class}\n          onChange={handleChange}\n          required\n        >\n          <option value=\"\">-- Select Class --</option>\n          {classes.map(cls => (\n            <option key={cls.id} value={cls.id}>{cls.name}</option>\n          ))}\n        </select>\n      </label>\n\n      <button type=\"submit\">Add Student</button>\n    </form>\n  );\n};\n\nexport default AddStudent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,mBAAmB,CAAC,CAAC;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAChC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC;IACvCY,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE,EAAE;IACZC,aAAa,EAAE,EAAE;IACjBC,MAAM,EAAE,GAAG;IAAI;IACfC,OAAO,EAAE,EAAE;IACXC,cAAc,EAAE,EAAE;IAClBC,aAAa,EAAE,EAAE,CAAE;EACrB,CAAC,CAAC;EAEFlB,SAAS,CAAC,M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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}