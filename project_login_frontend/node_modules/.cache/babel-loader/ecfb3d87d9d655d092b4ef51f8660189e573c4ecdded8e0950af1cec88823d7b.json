{"ast":null,"code":"import jwt_decode from \"jwt-decode\";\nexport function isTokenExpired(token) {\n  try {\n    const {\n      exp\n    } = jwt_decode(token);\n    const now = Date.now() / 1000; // current time in seconds\n    return exp < now;\n  } catch (err) {\n    return true; // treat invalid tokens as expired\n  }\n}\nexport function getTokenRemainingTime(token) {\n  try {\n    const {\n      exp\n    } = jwt_decode(token);\n    const now = Date.now() / 1000;\n    return exp - now; // seconds remaining\n  } catch (err) {\n    return 0;\n  }\n}","map":{"version":3,"names":["jwt_decode","isTokenExpired","token","exp","now","Date","err","getTokenRemainingTime"],"sources":["/home/shreyas/project_login/project_login_frontend/src/authUtils.js"],"sourcesContent":["import jwt_decode from \"jwt-decode\";\n\nexport function isTokenExpired(token) {\n  try {\n    const { exp } = jwt_decode(token);\n    const now = Date.now() / 1000; // current time in seconds\n    return exp < now;\n  } catch (err) {\n    return true; // treat invalid tokens as expired\n  }\n}\n\nexport function getTokenRemainingTime(token) {\n  try {\n    const { exp } = jwt_decode(token);\n    const now = Date.now() / 1000;\n    return exp - now; // seconds remaining\n  } catch (err) {\n    return 0;\n  }\n}"],"mappings":"AAAA,OAAOA,UAAU,MAAM,YAAY;AAEnC,OAAO,SAASC,cAAcA,CAACC,KAAK,EAAE;EACpC,IAAI;IACF,MAAM;MAAEC;IAAI,CAAC,GAAGH,UAAU,CAACE,KAAK,CAAC;IACjC,MAAME,GAAG,GAAGC,IAAI,CAACD,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;IAC/B,OAAOD,GAAG,GAAGC,GAAG;EAClB,CAAC,CAAC,OAAOE,GAAG,EAAE;IACZ,OAAO,IAAI,CAAC,CAAC;EACf;AACF;AAEA,OAAO,SAASC,qBAAqBA,CAACL,KAAK,EAAE;EAC3C,IAAI;IACF,MAAM;MAAEC;IAAI,CAAC,GAAGH,UAAU,CAACE,KAAK,CAAC;IACjC,MAAME,GAAG,GAAGC,IAAI,CAACD,GAAG,CAAC,CAAC,GAAG,IAAI;IAC7B,OAAOD,GAAG,GAAGC,GAAG,CAAC,CAAC;EACpB,CAAC,CAAC,OAAOE,GAAG,EAAE;IACZ,OAAO,CAAC;EACV;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}