{"ast":null,"code":"var _jsxFileName = \"/home/shreyas/project_login/project_login_frontend/src/components/AddStudent.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n\n// const AddStudent = ({ token }) => {\n//   const [loading, setLoading] = useState(false);\n//   const [classes, setClasses] = useState([]);\n//   const [formData, setFormData] = useState({\n//     username: '',\n//     email: '',\n//     password: '',\n//     date_of_birth: '',\n//     gender: 'M',\n//     address: '',\n//     parent_contact: '',\n//     student_class: '',\n//   });\n\n//   useEffect(() => {\n//   const fetchTeacherClasses = async () => {\n//     const storedToken = localStorage.getItem('token') || token;\n\n//     if (!storedToken) {\n//       console.warn('❌ Token not found in localStorage or props.');\n//       alert('Authentication token missing. Please log in again.');\n//       return;\n//     }\n\n//     setLoading(true);\n\n//     const controller = new AbortController();\n//     const timeoutId = setTimeout(() => {\n//       controller.abort();\n//     }, 30000); // Abort after 30 seconds\n\n//     try {\n//       console.log('🔐 Using token:', storedToken);  // Debug token\n\n//       const res = await axios.get('http://localhost:8000/api/teacher-classrooms/', {\n//         headers: { Authorization: `Bearer ${storedToken}` },\n//         signal: controller.signal\n//       });\n\n//       setClasses(res.data);  // ✅ Store fetched classrooms\n\n//     } catch (err) {\n//       if (axios.isCancel(err)) {\n//         console.error('❌ Request timed out.');\n//         alert('Request timed out. Please try again later.');\n//       } else if (err.response) {\n//         console.error('❌ Backend responded with error:', err.response.data);\n\n//         if (err.response.status === 401 && err.response.data?.code === \"token_not_valid\") {\n//           alert(\"Your session has expired or token is invalid. Please log in again.\");\n//           localStorage.removeItem('token');\n//           window.location.href = '/TeacherDashboard'; // Redirect to Teacher Dashboard\n//         } else {\n//           alert(`Error fetching classes: ${err.response.data.detail || JSON.stringify(err.response.data)}`);\n//         }\n\n//       } else if (err.request) {\n//         console.error('❌ No response from backend:', err.request);\n//         alert('No response from server. Check your network or backend server.');\n//       } else {\n//         console.error('❌ Unexpected Axios error:', err.message);\n//         alert('Unexpected error occurred: ' + err.message);\n//       }\n\n//     } finally {\n//       clearTimeout(timeoutId);\n//       setLoading(false);\n//     }\n//   };\n\n//   fetchTeacherClasses();\n// }, [token]);\n\n//   // Timeout Effect: cancel loading if it exceeds 10 seconds\n//   useEffect(() => {\n//     const timeout = setTimeout(() => {\n//       if (loading) {\n//         setLoading(false);\n//         alert('Loading is taking too long. Please try again later.');\n//       }\n//     }, 20000); // 20 seconds\n\n//     return () => clearTimeout(timeout);\n//   }, [loading]);\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData(prev => ({ ...prev, [name]: value }));\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     if (!formData.student_class) {\n//       return alert(\"Please select a class\");\n//     }\n\n//     // Validate if selected class is in the teacher's classroom list\n//     const isValidClass = classes.some(cls => cls.id.toString() === formData.student_class);\n//     if (!isValidClass) {\n//       return alert(\"Invalid class selection. You can only add students to your assigned classes.\");\n//     }\n\n//     try {\n//       await axios.post('http://localhost:8000/api/AddStudent/', formData, {\n//         headers: { Authorization: `Bearer ${token}` }\n//       });\n\n//       alert('Student profile created successfully!');\n//       setFormData({\n//         username: '',\n//         email: '',\n//         password: '',\n//         date_of_birth: '',\n//         gender: 'M',\n//         address: '',\n//         parent_contact: '',\n//         student_class: ''\n//       });\n//     } catch (error) {\n//       alert('Failed to create student: ' + JSON.stringify(error.response?.data || error.message));\n//     }\n//   };\n\n//   if (loading) return <p>Loading classes... Please wait.</p>;\n\n//   return (\n//     <form onSubmit={handleSubmit}>\n//       <input\n//         name=\"username\"\n//         value={formData.username}\n//         onChange={handleChange}\n//         placeholder=\"Username\"\n//         required\n//       />\n//       <input\n//         name=\"email\"\n//         value={formData.email}\n//         onChange={handleChange}\n//         placeholder=\"Email\"\n//         type=\"email\"\n//         required\n//       />\n//       <input\n//         name=\"password\"\n//         value={formData.password}\n//         onChange={handleChange}\n//         placeholder=\"Password\"\n//         type=\"password\"\n//         required\n//       />\n//       <input\n//         name=\"date_of_birth\"\n//         value={formData.date_of_birth}\n//         onChange={handleChange}\n//         placeholder=\"Date of Birth\"\n//         type=\"date\"\n//         required\n//       />\n//       <select name=\"gender\" value={formData.gender} onChange={handleChange} required>\n//         <option value=\"M\">Male</option>\n//         <option value=\"F\">Female</option>\n//         <option value=\"O\">Other</option>\n//       </select>\n//       <textarea\n//         name=\"address\"\n//         value={formData.address}\n//         onChange={handleChange}\n//         placeholder=\"Address\"\n//         required\n//       />\n//       <input\n//         name=\"parent_contact\"\n//         value={formData.parent_contact}\n//         onChange={handleChange}\n//         placeholder=\"Parent Contact\"\n//         required\n//       />\n\n//       <label>\n//         Select Class:\n//         <select\n//           name=\"student_class\"\n//           value={formData.student_class}\n//           onChange={handleChange}\n//           required\n//         >\n//           <option value=\"\">-- Select Class --</option>\n//           {classes.map(cls => (\n//             <option key={cls.id} value={cls.id}>\n//               {cls.name}\n//             </option>\n//           ))}\n//         </select>\n//       </label>\n\n//       <button type=\"submit\">Add Student</button>\n//     </form>\n//   );\n// };\n\n// export default AddStudent;\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddStudent = ({\n  token\n}) => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [classes, setClasses] = useState([]);\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    password: '',\n    date_of_birth: '',\n    gender: 'M',\n    address: '',\n    parent_contact: '',\n    student_class: ''\n  });\n\n  // ✅ Fetch teacher's classrooms when component mounts\n  useEffect(() => {\n    const fetchTeacherClasses = async () => {\n      const storedToken = localStorage.getItem('token') || token;\n      if (!storedToken) {\n        alert('Authentication token missing. Please log in again.');\n        return;\n      }\n      setLoading(true);\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), 30000); // 30s timeout\n\n      try {\n        console.log('🔐 Using token:', storedToken);\n        const res = await axios.get('http://localhost:8000/api/teacher-classrooms/', {\n          headers: {\n            Authorization: `Bearer ${storedToken}`\n          },\n          signal: controller.signal\n        });\n        console.log(\"✅ Classes fetched:\", res.data);\n        setClasses(res.data);\n      } catch (err) {\n        if (axios.isCancel(err)) {\n          alert('⏱ Request timed out. Try again.');\n        } else if (err.response) {\n          var _err$response$data;\n          console.error('❌ Backend error:', err.response.data);\n          if (err.response.status === 401 && ((_err$response$data = err.response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.code) === \"token_not_valid\") {\n            alert(\"Session expired or invalid token. Please log in again.\");\n            localStorage.removeItem('token');\n            window.location.href = '/TeacherDashboard';\n          } else {\n            alert(`Error: ${err.response.data.detail || JSON.stringify(err.response.data)}`);\n          }\n        } else {\n          alert('❌ Unexpected error: ' + err.message);\n        }\n      } finally {\n        clearTimeout(timeoutId);\n        setLoading(false);\n      }\n    };\n    fetchTeacherClasses(); // fetch once on mount\n  }, [token]);\n\n  // Timeout fallback if loading takes too long\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      if (loading) {\n        setLoading(false);\n        alert('Loading took too long. Please try again.');\n      }\n    }, 20000);\n    return () => clearTimeout(timeout);\n  }, [loading]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!formData.student_class) {\n      return alert(\"Please select a class\");\n    }\n    const isValidClass = classes.some(cls => cls.id.toString() === formData.student_class);\n    if (!isValidClass) {\n      return alert(\"You can only add students to your assigned classes.\");\n    }\n    try {\n      const storedToken = localStorage.getItem('token') || token;\n      await axios.post('http://localhost:8000/api/AddStudent/', formData, {\n        headers: {\n          Authorization: `Bearer ${storedToken}`\n        }\n      });\n      alert('✅ Student profile created successfully!');\n      setFormData({\n        username: '',\n        email: '',\n        password: '',\n        date_of_birth: '',\n        gender: 'M',\n        address: '',\n        parent_contact: '',\n        student_class: ''\n      });\n    } catch (error) {\n      var _error$response;\n      alert('❌ Failed to create student: ' + JSON.stringify(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message));\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading classes... Please wait.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 323,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add Student\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      placeholder: \"Username\",\n      value: formData.username,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"Email\",\n      value: formData.email,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Password\",\n      value: formData.password,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      name: \"date_of_birth\",\n      value: formData.date_of_birth,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"gender\",\n      value: formData.gender,\n      onChange: handleChange,\n      required: true,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"M\",\n        children: \"Male\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"F\",\n        children: \"Female\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"address\",\n      placeholder: \"Address\",\n      value: formData.address,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"parent_contact\",\n      placeholder: \"Parent Contact\",\n      value: formData.parent_contact,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Select Class:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"student_class\",\n        value: formData.student_class,\n        onChange: handleChange,\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"-- Select Class --\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this), classes.map(cls => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: cls.id,\n          children: cls.name\n        }, cls.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: loading,\n      children: \"Create Student\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 326,\n    columnNumber: 5\n  }, this);\n};\n_s(AddStudent, \"5PP4CH+zXrXHXPHQKQB+DzDfc1o=\");\n_c = AddStudent;\nexport default AddStudent;\nvar _c;\n$RefreshReg$(_c, \"AddStudent\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","AddStudent","token","_s","loading","setLoading","classes","setClasses","formData","setFormData","username","email","password","date_of_birth","gender","address","parent_contact","student_class","fetchTeacherClasses","storedToken","localStorage","getItem","alert","controller","AbortController","timeoutId","setTimeout","abort","console","log","res","get","headers","Authorization","signal","data","err","isCancel","response","_err$response$data","error","status","code","removeItem","window","location","href","detail","JSON","stringify","message","clearTimeout","timeout","handleChange","e","name","value","target","prev","handleSubmit","preventDefault","isValidClass","some","cls","id","toString","post","_error$response","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","map","disabled","_c","$RefreshReg$"],"sources":["/home/shreyas/project_login/project_login_frontend/src/components/AddStudent.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n\n// const AddStudent = ({ token }) => {\n//   const [loading, setLoading] = useState(false);\n//   const [classes, setClasses] = useState([]);\n//   const [formData, setFormData] = useState({\n//     username: '',\n//     email: '',\n//     password: '',\n//     date_of_birth: '',\n//     gender: 'M',\n//     address: '',\n//     parent_contact: '',\n//     student_class: '',\n//   });\n\n//   useEffect(() => {\n//   const fetchTeacherClasses = async () => {\n//     const storedToken = localStorage.getItem('token') || token;\n\n//     if (!storedToken) {\n//       console.warn('❌ Token not found in localStorage or props.');\n//       alert('Authentication token missing. Please log in again.');\n//       return;\n//     }\n\n//     setLoading(true);\n\n//     const controller = new AbortController();\n//     const timeoutId = setTimeout(() => {\n//       controller.abort();\n//     }, 30000); // Abort after 30 seconds\n\n//     try {\n//       console.log('🔐 Using token:', storedToken);  // Debug token\n\n//       const res = await axios.get('http://localhost:8000/api/teacher-classrooms/', {\n//         headers: { Authorization: `Bearer ${storedToken}` },\n//         signal: controller.signal\n//       });\n\n//       setClasses(res.data);  // ✅ Store fetched classrooms\n\n//     } catch (err) {\n//       if (axios.isCancel(err)) {\n//         console.error('❌ Request timed out.');\n//         alert('Request timed out. Please try again later.');\n//       } else if (err.response) {\n//         console.error('❌ Backend responded with error:', err.response.data);\n\n//         if (err.response.status === 401 && err.response.data?.code === \"token_not_valid\") {\n//           alert(\"Your session has expired or token is invalid. Please log in again.\");\n//           localStorage.removeItem('token');\n//           window.location.href = '/TeacherDashboard'; // Redirect to Teacher Dashboard\n//         } else {\n//           alert(`Error fetching classes: ${err.response.data.detail || JSON.stringify(err.response.data)}`);\n//         }\n\n//       } else if (err.request) {\n//         console.error('❌ No response from backend:', err.request);\n//         alert('No response from server. Check your network or backend server.');\n//       } else {\n//         console.error('❌ Unexpected Axios error:', err.message);\n//         alert('Unexpected error occurred: ' + err.message);\n//       }\n\n//     } finally {\n//       clearTimeout(timeoutId);\n//       setLoading(false);\n//     }\n//   };\n\n//   fetchTeacherClasses();\n// }, [token]);\n\n//   // Timeout Effect: cancel loading if it exceeds 10 seconds\n//   useEffect(() => {\n//     const timeout = setTimeout(() => {\n//       if (loading) {\n//         setLoading(false);\n//         alert('Loading is taking too long. Please try again later.');\n//       }\n//     }, 20000); // 20 seconds\n\n//     return () => clearTimeout(timeout);\n//   }, [loading]);\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData(prev => ({ ...prev, [name]: value }));\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     if (!formData.student_class) {\n//       return alert(\"Please select a class\");\n//     }\n\n//     // Validate if selected class is in the teacher's classroom list\n//     const isValidClass = classes.some(cls => cls.id.toString() === formData.student_class);\n//     if (!isValidClass) {\n//       return alert(\"Invalid class selection. You can only add students to your assigned classes.\");\n//     }\n\n//     try {\n//       await axios.post('http://localhost:8000/api/AddStudent/', formData, {\n//         headers: { Authorization: `Bearer ${token}` }\n//       });\n\n//       alert('Student profile created successfully!');\n//       setFormData({\n//         username: '',\n//         email: '',\n//         password: '',\n//         date_of_birth: '',\n//         gender: 'M',\n//         address: '',\n//         parent_contact: '',\n//         student_class: ''\n//       });\n//     } catch (error) {\n//       alert('Failed to create student: ' + JSON.stringify(error.response?.data || error.message));\n//     }\n//   };\n\n//   if (loading) return <p>Loading classes... Please wait.</p>;\n\n//   return (\n//     <form onSubmit={handleSubmit}>\n//       <input\n//         name=\"username\"\n//         value={formData.username}\n//         onChange={handleChange}\n//         placeholder=\"Username\"\n//         required\n//       />\n//       <input\n//         name=\"email\"\n//         value={formData.email}\n//         onChange={handleChange}\n//         placeholder=\"Email\"\n//         type=\"email\"\n//         required\n//       />\n//       <input\n//         name=\"password\"\n//         value={formData.password}\n//         onChange={handleChange}\n//         placeholder=\"Password\"\n//         type=\"password\"\n//         required\n//       />\n//       <input\n//         name=\"date_of_birth\"\n//         value={formData.date_of_birth}\n//         onChange={handleChange}\n//         placeholder=\"Date of Birth\"\n//         type=\"date\"\n//         required\n//       />\n//       <select name=\"gender\" value={formData.gender} onChange={handleChange} required>\n//         <option value=\"M\">Male</option>\n//         <option value=\"F\">Female</option>\n//         <option value=\"O\">Other</option>\n//       </select>\n//       <textarea\n//         name=\"address\"\n//         value={formData.address}\n//         onChange={handleChange}\n//         placeholder=\"Address\"\n//         required\n//       />\n//       <input\n//         name=\"parent_contact\"\n//         value={formData.parent_contact}\n//         onChange={handleChange}\n//         placeholder=\"Parent Contact\"\n//         required\n//       />\n\n//       <label>\n//         Select Class:\n//         <select\n//           name=\"student_class\"\n//           value={formData.student_class}\n//           onChange={handleChange}\n//           required\n//         >\n//           <option value=\"\">-- Select Class --</option>\n//           {classes.map(cls => (\n//             <option key={cls.id} value={cls.id}>\n//               {cls.name}\n//             </option>\n//           ))}\n//         </select>\n//       </label>\n\n//       <button type=\"submit\">Add Student</button>\n//     </form>\n//   );\n// };\n\n// export default AddStudent;\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst AddStudent = ({ token }) => {\n  const [loading, setLoading] = useState(false);\n  const [classes, setClasses] = useState([]);\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    password: '',\n    date_of_birth: '',\n    gender: 'M',\n    address: '',\n    parent_contact: '',\n    student_class: '',\n  });\n\n  // ✅ Fetch teacher's classrooms when component mounts\n  useEffect(() => {\n    const fetchTeacherClasses = async () => {\n      const storedToken = localStorage.getItem('token') || token;\n\n      if (!storedToken) {\n        alert('Authentication token missing. Please log in again.');\n        return;\n      }\n\n      setLoading(true);\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), 30000); // 30s timeout\n\n      try {\n        console.log('🔐 Using token:', storedToken);\n        const res = await axios.get('http://localhost:8000/api/teacher-classrooms/', {\n          headers: { Authorization: `Bearer ${storedToken}` },\n          signal: controller.signal,\n        });\n\n        console.log(\"✅ Classes fetched:\", res.data);\n        setClasses(res.data);\n\n      } catch (err) {\n        if (axios.isCancel(err)) {\n          alert('⏱ Request timed out. Try again.');\n        } else if (err.response) {\n          console.error('❌ Backend error:', err.response.data);\n          if (err.response.status === 401 && err.response.data?.code === \"token_not_valid\") {\n            alert(\"Session expired or invalid token. Please log in again.\");\n            localStorage.removeItem('token');\n            window.location.href = '/TeacherDashboard';\n          } else {\n            alert(`Error: ${err.response.data.detail || JSON.stringify(err.response.data)}`);\n          }\n        } else {\n          alert('❌ Unexpected error: ' + err.message);\n        }\n      } finally {\n        clearTimeout(timeoutId);\n        setLoading(false);\n      }\n    };\n\n    fetchTeacherClasses(); // fetch once on mount\n  }, [token]);\n\n  // Timeout fallback if loading takes too long\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      if (loading) {\n        setLoading(false);\n        alert('Loading took too long. Please try again.');\n      }\n    }, 20000);\n    return () => clearTimeout(timeout);\n  }, [loading]);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({ ...prev, [name]: value }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!formData.student_class) {\n      return alert(\"Please select a class\");\n    }\n\n    const isValidClass = classes.some(cls => cls.id.toString() === formData.student_class);\n    if (!isValidClass) {\n      return alert(\"You can only add students to your assigned classes.\");\n    }\n\n    try {\n      const storedToken = localStorage.getItem('token') || token;\n\n      await axios.post('http://localhost:8000/api/AddStudent/', formData, {\n        headers: { Authorization: `Bearer ${storedToken}` }\n      });\n\n      alert('✅ Student profile created successfully!');\n      setFormData({\n        username: '',\n        email: '',\n        password: '',\n        date_of_birth: '',\n        gender: 'M',\n        address: '',\n        parent_contact: '',\n        student_class: ''\n      });\n\n    } catch (error) {\n      alert('❌ Failed to create student: ' + JSON.stringify(error.response?.data || error.message));\n    }\n  };\n\n  if (loading) return <p>Loading classes... Please wait.</p>;\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h2>Add Student</h2>\n\n      <input type=\"text\" name=\"username\" placeholder=\"Username\" value={formData.username} onChange={handleChange} required />\n      <input type=\"email\" name=\"email\" placeholder=\"Email\" value={formData.email} onChange={handleChange} required />\n      <input type=\"password\" name=\"password\" placeholder=\"Password\" value={formData.password} onChange={handleChange} required />\n      <input type=\"date\" name=\"date_of_birth\" value={formData.date_of_birth} onChange={handleChange} required />\n\n      <select name=\"gender\" value={formData.gender} onChange={handleChange} required>\n        <option value=\"M\">Male</option>\n        <option value=\"F\">Female</option>\n      </select>\n\n      <input type=\"text\" name=\"address\" placeholder=\"Address\" value={formData.address} onChange={handleChange} required />\n      <input type=\"text\" name=\"parent_contact\" placeholder=\"Parent Contact\" value={formData.parent_contact} onChange={handleChange} required />\n\n      <label>\n        Select Class:\n        <select\n          name=\"student_class\"\n          value={formData.student_class}\n          onChange={handleChange}\n          required\n        >\n          <option value=\"\">-- Select Class --</option>\n          {classes.map(cls => (\n            <option key={cls.id} value={cls.id}>{cls.name}</option>\n          ))}\n        </select>\n      </label>\n\n      <button type=\"submit\" disabled={loading}>Create Student</button>\n    </form>\n  );\n};\n\nexport default AddStudent;\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAChC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}